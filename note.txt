终端使用
tarena @  tedu    ：   ~        $/#（$普通用户，#超级用户）
用户名 @ 计算机名 ： 当前位置   命令提示符
                                使用sudo su进入超级用户
                                使用exit退出超级用户

进制的使用

十进制  满10进1   0--9
二进制  满2进1    0、1
八进制  满8进1    0--7 数字前加0表示八进制数：045
十六进制  满16进1    0--15 数字前加0x表示十六进制数：0xA8
   10 11 12 13 14 15
    A  B  C  D  E  F


十----》二  除以2取余
二----》十  
二----》八 


3f7a
0011 1111 0111 1010

45          10
0010 1101   2
0x2D        16


linux路径
文件夹---》主目录
~ ：当前用户的主目录，系统会自动为每一个用户创建一个文件夹为其主文件夹
/ : 表示根目录
相对路径：../b/5/f，一定不以"/"开头
          ..  表示当前目录的上一级目录
          .   表示当前目录
绝对路径：/a/1/i，一定以"/"开头

shell命令:
命令 [选项] [参数]
*每个部分之间一定要有空格
*选项和参数可有可无，位置比较灵活
  cmd -r abc  /  cmd abc -r / cmd -r abc -r def
 选项：辅助命令进行功能的丰富和细化
       选项的表达必须以 - 作为引导
       如果有多个选项可以表示如下：
       ls -l -a == ls -la
 参数：命令要操作的目标，并非所有命令都可加参数
 *
 打开终端：
 ctrl + alt + t（打开一个主目录终端）
 ctrl + shift + n（打开一个当前目录终端）
 ctrl + shift + t（打开一个当前目录终端）

d(文件类型)rwxr-xr-x (文件权限) 2 tarena tarena    4096 7月  17  2017 音乐
文件类型:
bc    d         -       l          s       p：linux下7种文件
    文件夹  普通文件  链接文件         管道文件
文件权限：读写执行
linux下以.开头的都是隐藏文件。
 
mkdir 创建文件夹
mkdir 文件夹名称
      -p   可以创建多级的目录

rmdir 删除文件夹 
rmdir 要删除的目录名
*只能删除空的目录，不可删除非空目录

rm 删除一个文件
rm [选项] 文件/文件夹
   -r 删除一个文件夹及文件夹内所有内容
   -i 删除前提示（y，n）
   -f 强制删除

cd 切换工作目录
cd [路径]
cd 回到主目录
cd - 在最近工作的两个目录中切换

pwd 打印当前工作目录的绝对路径

touch 创建一个空白文件 
touch 文件名

man 提供shell帮助
man 命令名

tab 自动补全
如果唯一确定，路径会自动补全

Clear=Ctrl+L 清理屏幕

cp 复制文件或文件夹到某个位置
cp [选项] 文件/文件夹（可以为多个） 目标位置
cp re -ra
re为普通文件
1.若第二个参数为文件夹，则表示将第一个参数拷贝到相关位置
2.若第二个参数为文件，则表示将第一个参数另存为相应内容
-a 如果要复制的内容是文件夹，则使用该文件

mv 移动一个文件或文件夹
mv [选项] 文件/文件夹（可以为多个） 目标位置
参数与cp命令相同，移动文件夹不需要选项

通配符:
* 表示任意0个或者多个字符
? 表示任意一个字符
[] 表示任意一个在中括号中的字符

history 查看命令记录
history num 表示查看num条记录
通过↑ ↓可以操作历史记录

cat 查看一个文件中的内容
cat 文件

find 查找文件位置
find 起始路径 -name 文件名
*find可以查找某个目录及其自目录中是否存在目标

grep 在文件中查找某个字符串
grep '字符串' 文件
             -n 查找的同事显示行号
             -r 可以在一个门路下查找其子目录中是否有该字符串
                
临时管理员权限:在命令前加 sudo

chmod 修改文件的权限 读写执行
chmod 权限表述 要修改的文件
用户 用户组 其他用户
rwx   rwx     r-x
chmod a+x 文件名 所有用户加上执行权限
        可组合修改权限：chmod a+xm
        chmod a-x 文件名 所有用户去掉执行权限
        权限：
        w：写权限
        r：读权限
        x：执行权限
        用户：
        a：所有用户
        u：所有者(属主)
        g：同组用户
        o：其他用户
       位掩码：
        000 000 000
        001：执行：1：x
        010：写：2：w
        100：读：4：r
        000：---
        011：-wx
        111：rwx
        101：r-x
        rwx r-x -wx
        111 101 011
        7    5   3
        chmod 644 文件名：rw-r--r--

zip 压缩       
zip 压缩包名 要压缩的文件列表
zip all.zip core file re
unzip 解压压缩包 
unzip 压缩包名

tar 压缩
bz2 gz 格式 
压缩率 bz2 > gz

压缩成bz2 
-c 创建归档
-j 使用bz2格式
-v 显示压缩过程
-f 指定压缩文件
tar -cjvf all.tar.bz2 file*

压缩成gz
-c 创建归档
-z 使用gz格式
-v 显示压缩过程
-f 指定压缩文件
tar -czvf all.tar.bz2 file*

解压（tar）
-x 解压
-xvf  
tar -xvf all2.tar.gz 

exit 关闭终端

sudo apt-get install 软件名
可以进行安装

sudo reboot 重启系统

程序员文本编辑器
notepad
sublime
vim
集成开发工具
pycharm

sublime使用

subl 打开编辑器
subl 文件名/文件夹名 使用sublime打开文件

从文件对应位置终端
在sublime右键“open Terminal Here”

改变字体大小（ctrl + 鼠标滚轮）
ctrl + = 放大
ctrl + - 缩小

view--layout-- 选择窗口显示的方式







python
官网：www.python.org 查看文档，下载第三方包，下载python
特点：1.简单 简洁
      2.功能强大（自动化脚本、爬虫、网站后端、算法、人工智能接口）
      3.运行效率低，开发效率高
      4.代码开放（开源）
      5.Python是一个胶水语言，可以很好的跟其他编程语言交互
      6.Python有很好的跨平台性能
      7.Python是解释性型的、高级的、面向对象的编程语言
        *解释型：需要解释器对程序解释为计算机能识别的内容
        *编译型：需要编译器对程序编译，然后对编译结果进行执行即可

        *面向过程：以语句为中心按步骤办事
        *面向对象：以数据为中心调用对象办事

Python干什么      
自动化运维
数据挖掘工程师（爬虫）
python web工程师
平台开发
大数据处理
人工智能开发

python的安装
linux下无需安装
windows下 1.下载安装包
          2.双击安装
          3.找到python.exe安装路径，添加到环境变量

python的运行：*.交互模式下运行
                进入：python3   ipython
                退出：quit（）  quit
                简单的python语句直接显示结果
              *.运行python程序
                .py 为后缀的文件
                一、
                1.通过sublime编写python程序病保存
                2.在相应的程序目录下通过 python3 文件名 的形式运行程序
                二、
                1.在程序第一行加上解释器位置#!/usr/bin/env python3
                2.文件需添加可执行权限：chmod 766 1.py
                3.在终端通过指明程序的路径即可运行 ：./1.py
python程序的组成：
    数据---》语句---》语句块---》模块---》工程
    程序=算法+数据结构
    python支持的数据类型：
    数字：整书 小数 复数
    字符串：子串 单个字符
    布尔数据：True False
    列表 元组 字典 集合 Nonetype 文件 类类型 对象
数字类型：
    整型 int
    浮点型 float： 1.4*10…^23---->>1.4e+23    1.4*10…^-23---->>1.4e-23
    复数类型 complex
    Nonetype
    
    值：none
    作用：无意义，用作占位；函数无返回值则返回一个None值；有时用作形参的默认值
    运算表达式：
    表达式：由一个数字或者数字与运算符构成
    算数运算符：+ - * /（得到浮点数） //（整除，向下取整） %（取余） **（幂运算）
    优先级：** > / // * % > + -
  **当高精度数据与低精度数据进行运算的时候结果自动转换为高精度
变量和常量
变量：自定义的标识符，用来代表某个值
    1.数字字母下划线组成
    2.不能以数字开头
    3.不能和python保留字重复
    = 赋值符号  左侧为变量，右侧为赋予变量的值
    1.变量初次赋值为变量的初始化
    2.变量可以多次赋值，后赋值内容会覆盖前面的内容
    3.变量没有固定类型，类型由所赋值类型决定
    赋值：a = b = c = 6;a,b = 1,2;a,b = b,a(可用于交换变量值)
    删除变量：del 变量名
常量：不可改变的量
布尔类型（bool）：True(逻辑真)；False(逻辑假)
逻辑判断语句: > < >= <= ==逻辑相等 !=不等于 
              集合 in   not in 
              对象 is   is not
**支持比较运算符的连续书写：a < b < 50;a < b > 20
python中关于True和False的其他规定：
1.False：0 0.0 0+0j none值 空的字符串'' 空的列表[] 空的集合set() 空的元组()  空的字典{}




复合运算符号
+=   a += 2>>>a = a + 2
-=   a -= 2>>>a = a - 2
*=
/=
//=
%=
**=


换行符
\ :代码书写时使用，不影响执行结果效果
   print\
   ("I Love China And I Love Norway ")


注释：对代码的解释说明，在运行过程中不参与程序的运行
      python中使用#引起单行注释，注释通常写在被标注代码的上方或右侧
python中，三引号'''可以当做多行注释使用
良好的代码风格，注释在15%左右



内建函数的使用
内建函数：python提供的已经实现的可以直接使用的函数
abs():求绝对值
      abs(-5) -----> 5
round():四舍五入
      round(num,[ndigits])默认四舍五入到整数，ndigits表示保留小数点后几位
      round(3.1415926)---->3
      round(3.1415926，3)---->3.142
强制转换
int(1.51)--->1
float(3)--->3.0
bool(123)--->True

id() 查看一个量的内存
如果id(a)和id(b)相同，则 a is b 一定为True

type() 查看对象的类型

help() 查看python内建函数或者模块的帮助








pow 函数
    pow(x,y,z=None) 两个参数时相当于x**y，三个参数时相当于x**y%z
    pow(2,3)--->8    pow(2,3,3)--->2

换行：
    1.显式换行：折行号：\
        i = 1 + 2 + 3\
            + 4 + 5
        pirnt(i)   #15 用\显式换行
    2.隐藏式换行：所有的括号内换行，成为隐式换行
        i = (1 + 2 + 3
            + 4 + 5)#括号要成对出现，会隐式换行直到找到对应的括号为止

基本输入输出
1.基本输入函数 input
    作用：从标准输入设备上读取一个字符串（末尾的换行符会被删除）
    格式：input("提示字符串")
    说明：返回输入的字符串(仅python3)
          '提示字符串'可以为空     
2.基本输出函数 print
    作用：将一系列的值以字符串形式疏忽到标准输出设备上，默认为终端
    格式：print(value,...,sep='',end='\n')
    说明：选项的关键字参数为：
          sep 两个值之间的分隔符，默认为一个空格
          end 输出完毕之后在末尾自动追加一个字符，默认为换行符'\n'

if 语句
   作用：让程序根据条件选择性的执行某条语句或某些语句
   说明：if 语句又叫条件语句，也叫分支语句
   语法：if 真值表达式1:
             语句块1
         elif 真值表达式2:
             语句块2
         elif 针织表达式3：
             语句块3
             ...
         else:
             语句块 
    语法说明：
        elif 子句可有0、1或者多个
        else 子句可有0或1个，且只能放在if语句的最后   
    要求：if语句内部的语句通常要以4个空格的缩进来表达包含关系，相同的缩进格式代表相同的所属      级别 
if语句嵌套
    if语句本身是由多条语句组成的一条复合语句
    if语句可以作为语句嵌套到另一个语句的内部

条件表达式
    语法：
        表达式1 if 真值表达式 else 表达式2
    作用：
        如果真值表达式的布尔环境值为True，则执行表达式1并返回结果的引用，否则执行表达式2并返回结果的引用

pass语句
	作用：通常用来填充语法空白
	pass 语句又名空语句
	语法：
	    pass

布尔运算
	not   and    or
	非     与    或

	not语法：
	    not x
	作用：对x进行布尔取值，如bool(x)为True，则返回False，否则返回True
	示例：not True # False
	      not False # true
	      not 100  # False
    and语法:
    	x and y
    	注：x,y为表达式
    作用：
    	优先返回假值对象
    	当bool(x)的值为False时，返回x，否则返回y
    示例：True and True    # True
          True and False   # False
          False and True   # False
          False and False  # False
    or语法：
    	x or y
    作用：
        优先返回真值对象，当x为True时返回x，否则返回y
    示例：True or True     # True
    	  True or False    # True
    	  False or True    # True
    	  False or Falsee  # False
    	  100 or 200       # 100
    	  100 or 1.00      # 100
    	  0 or 200         # 200
    	  0 or 0.0         # 0
正负号运算符：
	+ -
	语法：
		+ 表达式
		- 表达式
	示例：
		a = 5
		b = -a
		c = +a
练习：
    1.出租车计费标准
      x<3    13
      x>3    2.3/km
      空驶费，>15km,每公里加收基本单价的50%作为返程空驶费（3.45元 /km）
    要求：输入公里数，打印出费用金额（四舍五入）
    2.输入学生的三科成绩：
        1.打印出最高分
        2.打印出最低分
        3.打印出平均分  
    3.给出一个年份，判断是否为闰年并打印结果
        规则：四年一闰，每百年不闰，四百年又是一个闰年
    4.BMI指数，以身体质量指数
        公式:BMI = 体重（公斤）/ 身高（米）的平方
        标准表：BMI < 18.5  过轻
                18.5<=BMI<=24 正常
                BMI > 24 超标
        输入身高体重，打印出BMI值，并打印体重状况






字符串 str 
    作用：用来记录文本（文字）信息
    表达方式：
    	1.在非注释中，凡是用引号括起来的部分都是字符串,'(单引号)  "(双引号)  '''(三单引号)   """(三双引号) 
    	2.空字符串的字面值表示方式：''  ""  ''''''  """""" 
    	3.非空字符串的字面值表示方式：'hello' "hello" '''hello'''  """hello"""
    	4.单双引号的区别：单引号内的双引号不算结束符；双引号内的单引号不算结束符
    三双引号字符串：
    	作用：
    		三引号字符串的换行会自动转换为换行符'\n'
    		三引号内可以包含单引号和双引号（包括三单、三双引号）
    	表示方式：
    		'welcome to China\nI like python\nI am studing'
    		'''welcome to China
    		   I like python
    		   I am studing'''
	用转义序列代表特殊字符：
		字符串字面值中，用字符（\n）后跟一些字符代表一个字符
	字符串中的转义字符表：
		\'   代表一个单引号
		\"   代表一个双引号
		\\   代表一个反斜杠
		\n   换行
		\r   返回光标至首行
		\f   换页
		\t   水平制表符
		\v   垂直制表符
		\b   倒退
		\0   空字符，字符值为0
		\0oo  oo为两位八进制表示的字符
		\xXX  XX为两位十六进制表示的字符
		\uXXXX  Unicode16的十六进制表示的字符
		\UXXXXXXXX  Unicode32的十六进制表示的字符

ASCII编码：
	ASCII编码 字表符
	$ man ascii 
常用的ASCII编码：
字符     十进制      十六进制
'0'			48			0x30
'A'			65			0x41
'a'			97			0x61
 
raw 字符串（原始字符串）
	字面值格式：
		r'字符串内容'	
		r"字符串内容"
		r'''字符串内容'''
		r"""字符串内容"""
	作用：
		让转义字符\无效
	示例：
		a = 'C:\newfile\test.py'
		print(a)
		print(len(a)) #得到字符串的长度
		a = r'C:\newfile\test.py'
		print(a)
		print(len(a))
字符串的运算：
	算是运算符：
	+ += * *= /
	+ 加号运算符，用于字符串的拼接	
	  例：
	  	x = 'abcd' + 'efg'
	  	print(x)  #abcdefg
	  	x += '123'
	  	print(x) #abcdefg123
	* 乘号运算符，用于生成重复的字符串
	  例：
		x = '123'
	    y  = x * 2  # y = '123123' 	
	    x = '123'
	    x  *=  2  # x = '123123' 	

字符串的比较运算
	运算符：
		> >= < <= == !=
	示例:
		'A' < 'B'      #True	    
		'B' < 'a'      #True	    
		'ABC' > 'AB'   #True	    
		'AD' < 'ABC'   #False   
		'ABC' == 'abc' #False   
    in / not in 运算符
    	作用：
    		in用于序列，字典，集合中，用于判断某个值是否存在于容器中，若存在，返回True，否则返回False
    	格式：
    		对象 in 容器 
    	示例：
    		s = 'welcome to China'
    		'to' in s   # True
    		'e t' in s   # True
    		'lalal' in s  # Fals
字符串的索引操作:
	python 字符串str 是不可以改变的字符序列
	索引语法：
		字符串[整数表达式]
	说明：
		序列都可以用索引（index）来访问序列中的对象（元素）
		序列的正向索引时从0开始的，第二个索引为1，位后一个索引为len(s)-1
		序列的反向索引时从-1开始的，-1代表最后一个，-2位到时第二个，第一个是-len(s)
		s = 'abdefg'
		print(s[0])  # a
		print(s[-1]) # g
切片 slice
	从字符串序列中去除相应的元素重新组成一个字符串序列
	语法：
		序列名[(开始索引b):(结束索引e)(:(步长s))]	
	语法说明：
		开始索引时切片开始切下的位置，0代表第一个
		结束索引时切片的终止索引（但不包含终止点）
		步长是切片每次获取玩当前元素后移动的方向和偏移量
		1）没有步长，相当于取值完成后向右移动一个索引的位置（默认为1）	
		2）当步长为正数时，取正向切片,步长默认为1，开始索引默认为0，结束索引默认为len(s)
		3）当步长为负整数时，取反向切片，反向切片时，默认的初始位置为最后一个元素，终止位置是第一个元素的前一个位置
	示例：
	    s = 'abdefg'
		print(s[0:4])  # abde
		pirnt(s[:3])   # abd
		pirnt(s[2:])   # defg
		pirnt(s[1:1])  # ''
		pirnt(s[1:1])  # ''
		pirnt(s[3:1])  # ''
		pirnt(s[::-1]) # 'gfedba'
		pirnt(s[2::-2]) # 'da'
     判断回文：
     	s = input('请输入字符：')
		if s[:] == s[::-1]:
   		    print('您输入的是回文')
		else:
    		print('您输入的不是回文')

python3中常用的序列函数：
	len(seq)    返回序列的长度
	max(x)      返回序列的最大值元素
	min(x)      返回序列的最小值元素
示例：
	s == 'abcde'
	len(s)   # 5
	max(s)   # e
	min(s)   # a
 
